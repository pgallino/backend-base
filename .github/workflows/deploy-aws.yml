name: Build and push Docker image to ECR (manual)

on:
  workflow_dispatch: {}

jobs:

  run-neon-migrations:
    name: Run Migrations on Neon
    uses: ./.github/workflows/deploy-neon.yml
    secrets:
      NEON_DB_SYNC: ${{ secrets.NEON_DB_SYNC }}

  deploy-manual:
    runs-on: ubuntu-latest
    needs: [run-neon-migrations]
    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: backend-base

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${{ env.ECR_REPOSITORY }}" --region "${{ env.AWS_REGION }}" || \
            aws ecr create-repository --repository-name "${{ env.ECR_REPOSITORY }}" --region "${{ env.AWS_REGION }}"

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU and Docker Buildx
        uses: docker/setup-qemu-action@v2

      - name: Build and push image to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
          platforms: linux/amd64

      - name: Output image uri
        env:
          IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
        run: |
          echo "Image pushed: $IMAGE_URI"
